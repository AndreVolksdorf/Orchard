@using Orchard.ContentManagement
@using Orchard.Utility.Extensions
@using SmartPage.Community.Groups.Models
@using SmartPage.Community.Groups
@using SmartPage.Community.Groups.Extensions
@{
    IEnumerable<object> posts = Model.ContentItems;
    DepartmentPart contentPart = Model.ContentPart;
    Model.ContentItems.Classes.Add("content-items");
    var contentTypeClassName = ((string)contentPart.ContentItem.ContentType + "-posts").HtmlClassify();
    Model.ContentItems.Classes.Add(contentTypeClassName);

    bool noReplies = posts.Count() == 1 && (((ContentItem)((dynamic)posts.First()).ContentItem).As<GroupPostPart>().IsParentDepartment());
}
<div class="row">
    @foreach (var items in posts.GroupBy(item => ((ContentItem)((dynamic)item).ContentItem).ContentType).OrderBy(p => p.Key))
    {
        <div class="@items.Key">
            <ul>
                @foreach (var item in items)
                {
                    <li>
                        @Display(item)
                    </li>
                }
            </ul>
        </div>
    }

</div>

@*@Display(Model.ContentItems)*@
@if (noReplies)
{
    <p class="nocontentitems">@T("There are no posts for this department.")</p>
}
else {
    @Display(Model.Pager)
}